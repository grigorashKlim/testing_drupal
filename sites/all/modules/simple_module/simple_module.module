<?php
/**
 * @param $path
 * @param $arg
 * @return string|null
 * help? item in modules menu
 */
function simple_module_help($path, $arg) {
  switch ($path) {
    case "admin/help#simple_module":
      return t("Allows to set pair of id/string and display on a page.");
      break;
  }
}

/**
 * Implements hook_menu().
 */
function simple_module_menu() {
  $items = [];
  $items['admin/simple_module'] = [
    'title' => 'Simple module',
    'description' => 'simple module item for admin menu',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['simple_module_form'],
    'access arguments' => ['access administration pages'],
    'type' => MENU_NORMAL_ITEM,
  ];
  $items['simple_module_theme_callback'] = [
    'title' => 'Simple module page',
    'page callback' => 'simple_module_theme_callback',
    'access arguments' => ['access administration pages'],
    'type' => MENU_NORMAL_ITEM,
  ];
  return $items;
}

/**
 * @param $items
 * directs simple module page to be created in main menu
 */
function simple_module_menu_alter(&$items) {
  $items['simple_module_theme_callback']['menu_name'] = 'main-menu';
}

/**
 * @param $form
 * @param $form_state
 * @return mixed
 * form items creation section
 */
function simple_module_form($form, &$form_state) {
  $form['form_field'] = [
    '#type' => 'container',
    '#tree' => TRUE,
    '#prefix' => "<div id='records_div'>",
    '#suffix' => "</div>",
  ];
  $simple_module_saved_records = variable_get('simple_module_saved_records');
  if (!isset($form_state['simple_module_form_array'])) {
    $form_state['simple_module_form_array'] = range(0, 0);
    if (isset($simple_module_saved_records)) {
      $form_state['simple_module_form_array'] = $simple_module_saved_records;
    }
  }

  foreach ($form_state['simple_module_form_array'] as $simple_module_form_delta => $simple_module_form_value) {
    $simple_module_form_default_string = NULL;
    $simple_module_form_default_id = NULL;
    if (is_array($simple_module_form_value)) {
      $simple_module_form_default_id = $simple_module_form_value['string_id'];
      $simple_module_form_default_string = $simple_module_form_value['string'];
    }
    $form['form_field'][$simple_module_form_delta] = [
      '#type' => 'container',
      '#title' => t('record: ' . $simple_module_form_delta),
      '#tree' => TRUE,
    ];
    $form['form_field'][$simple_module_form_delta]['string_id'] = [
      '#type' => 'textfield',
      '#title' => t('Id'),
      '#size' => 6,
      '#tree' => TRUE,
      '#default_value' => $simple_module_form_default_id,

    ];
    $form['form_field'][$simple_module_form_delta]['string'] = [
      '#type' => 'textfield',
      '#title' => t('String value'),
      '#default_value' => $simple_module_form_default_string,
      '#tree' => TRUE,
      '#description' => 'form #' . $simple_module_form_delta,
      '#size' => 25,

    ];
    $form['form_field'][$simple_module_form_delta]['delete_button'] = [
      '#type' => 'submit',
      '#tree' => TRUE,
      '#title' => $simple_module_form_delta,
      '#name' => $simple_module_form_delta,
      '#title_display' => 'invisible',
      '#value' => t('Delete'),
      '#submit' => ['simple_module_records_delete'],
      '#ajax' => [
        'callback' => 'simple_module_records_delete_callback',
        'wrapper' => 'records_div',
      ],
    ];
  }
  $form['save_button'] = [
    '#type' => 'submit',
    '#value' => t('Save'),
    '#submit' => ['simple_module_records_save'],
    '#ajax' => [
      'callback' => 'simple_module_records_add_callback',
      'wrapper' => 'records_div',
    ],
  ];
  $form['add_button'] = [
    '#type' => 'submit',
    '#value' => t('Add New'),
    '#submit' => ['simple_module_records_add'],
    '#ajax' => [
      'callback' => 'simple_module_records_add_callback',
      'wrapper' => 'records_div',
    ],
  ];
  $form['remove_all_button'] = [
    '#type' => 'submit',
    '#value' => t('Remove All'),
    '#submit' => ['simple_module_remove_all'],
  ];
  return $form;
}

/**
 * @param $form
 * @param $form_state
 *
 * @return mixed
 * section of callbacks and submit functions
 */


function simple_module_records_add_callback($form, &$form_state) {
  return $form['form_field'];
}

function simple_module_records_delete_callback($form, &$form_state) {
  return $form['form_field'];
}

/**
 * @param $form
 * @param $form_state
 * function for creation new form with "id"/"string_id" pair
 */
function simple_module_records_add($form, &$form_state) {
  $form_state['simple_module_form_array'][] = count($form_state['simple_module_form_array']) > 0 ? count($form_state['simple_module_form_array']) + 1 : 0;
  $form_state['rebuild'] = TRUE;
  drupal_get_messages();
}

/**
 * @param $form
 * @param $form_state
 * save on submit function
 * kepps data in global variable created via variable_set function
 */
function simple_module_records_save($form, &$form_state) {
  $data = $form_state['values']['form_field'];
  $simple_module_saved_records = $data ? $data : NULL;
  variable_set('simple_module_saved_records', $simple_module_saved_records);
}

/**
 * @param $form
 * @param $form_state
 * delete record function
 * title of the delete button and form are same,so by triggering element's
 *   title we unset data value from both current form array and saved one.
 */
function simple_module_records_delete($form, &$form_state) {

  $simple_module_triggered_del_button = $form_state['triggering_element']['#title'];
  unset($form_state['simple_module_form_array'][$simple_module_triggered_del_button]);
  $simple_module_saved_records = variable_get('simple_module_saved_records');
  if (isset($simple_module_saved_records)) {
    unset($simple_module_saved_records[$simple_module_triggered_del_button]);
  }
  $form_state['rebuild'] = TRUE;
  variable_set('simple_module_saved_records', $simple_module_saved_records);
  drupal_get_messages();
}

function simple_module_remove_all() {
  variable_del('simple_module_saved_records');
}

/**
 * @param $existing
 * @param $type
 * @param $theme
 * @param $path
 *
 * @return array
 * theming implementation.
 */
function simple_module_theme($existing, $type, $theme, $path) {
  $theme = [];
  $theme['simple_module_template'] = [
    'template' => 'simple_module-template',
    'variables' => ['simple_module_form_array' => NULL],
    'path' => drupal_get_path('module', 'simple_module'),
  ];
  return $theme;
}

// In the callback function
function simple_module_theme_callback() {
  $simple_module_form_array = variable_get('simple_module_saved_records');
  $output = theme('simple_module_template', ['simple_module_form_array' => $simple_module_form_array]);
  return $output;
}
